name: 'Get & Cache Dependencies'
descripton: 'Get the dependencies (via NPM) and cache them'
inputs:
  cacheing:
    description: Specifies whether the cacheing step should be run if required
    required: false
    default: 'true'

outputs:
  cache-used:
    description: Specifies whether the cache was used
    #value: ${{ steps.install.outputs.cache }}
    value: ${{ inputs.cacheing }}

runs:
  using: 'composite'
  steps:
    - name: Cache dependencies
      id: cache
      if: inputs.cacheing == 'true'
      uses: actions/cache@v4
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      id: install
      if: steps.cache.outputs.cache-hit != 'true' || inputs.cacheing != 'true'
      shell: bash
      run: |
        npm ci
        echo "::set-output name=cache::'${{ inputs.cacheing }}'"
        
    - name: Test Output
      shell: bash
      run: echo "The output is '${{ steps.install.outputs.cacheing }}"